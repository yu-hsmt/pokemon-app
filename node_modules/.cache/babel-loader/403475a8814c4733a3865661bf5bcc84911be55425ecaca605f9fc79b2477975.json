{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {\n    async fetchPokemons({\n      commit\n    }) {\n      //以下を「fetchPokemons」としてmutationsにコミット\n      commit('SET_LOADING', true); //「SET_LOADING」にtrueの値をコミット\n      try {\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=150'); //ポケモンAPIを呼び出し\n        commit('SET_POKEMONS', response.data.results); //「SET_POKEMONS」にAPIが返した結果をコミット\n      } catch (error) {\n        //エラーの場合\n        console.error(error); //コンソールにエラー内容を表示\n      } finally {\n        //成功でもエラーでも以下を実行\n        commit('SET_LOADING', false); //「SET_LOADING」にfalseの値をコミット\n      }\n    },\n    async fetchPokemonDetails({\n      commit\n    }, name) {\n      //以下を「fetchPokemonDetails」としてmutationsのnameにコミット\n      try {\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`); //ポケモンAPIを呼び出し\n        commit('SET_POKEMON_DETAILS', {\n          name,\n          details: response.data\n        }); //？？？「SET_POKEMON_DETAILS」のnameにAPIが返した結果をコミット？この書き方のはどこが何を指している？\n      } catch (error) {\n        console.error(error); //エラーの場合、コンソールにエラー内容を表示\n      }\n    }\n  },\n  getters: {\n    filteredPokemons: state => {\n      //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon =>\n      //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n      pokemon.name.toLowerCase(), includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') {\n        //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え　？？？aとbはどこから出てきた？\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: state => state.loading,\n    //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: state => name => state.pokemonDetails[name] //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n});","map":{"version":3,"names":["createStore","axios","state","getters","mutations","actions","fetchPokemons","commit","response","get","data","results","error","console","fetchPokemonDetails","name","details","filteredPokemons","filtered","pokemons","filter","pokemon","toLowerCase","includes","searchQuery","sortOrder","sort","a","b","localeCompare","loading","pokemonDetails"],"sources":["/Users/yu/pokemon-app_practice/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n    async fetchPokemons({ commit }) { //以下を「fetchPokemons」としてmutationsにコミット\n      commit('SET_LOADING', true); //「SET_LOADING」にtrueの値をコミット\n      try {\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=150'); //ポケモンAPIを呼び出し\n        commit('SET_POKEMONS', response.data.results); //「SET_POKEMONS」にAPIが返した結果をコミット\n      } catch (error) { //エラーの場合\n        console.error(error); //コンソールにエラー内容を表示\n      } finally { //成功でもエラーでも以下を実行\n        commit('SET_LOADING', false); //「SET_LOADING」にfalseの値をコミット\n      }\n    },\n    async fetchPokemonDetails({ commit }, name) { //以下を「fetchPokemonDetails」としてmutationsのnameにコミット\n      try {\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`); //ポケモンAPIを呼び出し\n        commit('SET_POKEMON_DETAILS', { name, details: response.data }); //？？？「SET_POKEMON_DETAILS」のnameにAPIが返した結果をコミット？この書き方のはどこが何を指している？\n      } catch (error) {\n        console.error(error); //エラーの場合、コンソールにエラー内容を表示\n      }\n    }\n  },\n  getters: {\n    filteredPokemons: (state) => { //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon => //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n        pokemon.name.toLowerCase(),includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') { //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え　？？？aとbはどこから出てきた？\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: (state) => state.loading, //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: (state) => (name) => state.pokemonDetails[name], //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE,CACP,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE,CACX,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAE;MAChCA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,6CAA6C,CAAC,CAAC,CAAC;QACjFF,MAAM,CAAC,cAAc,EAAEC,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAE;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;MACxB,CAAC,SAAS;QAAE;QACVL,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;MAChC;IACF,CAAC;IACD,MAAMO,mBAAmBA,CAAC;MAAEP;IAAO,CAAC,EAAEQ,IAAI,EAAE;MAAE;MAC5C,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,qCAAqCM,IAAI,EAAE,CAAC,CAAC,CAAC;QAC/ER,MAAM,CAAC,qBAAqB,EAAE;UAAEQ,IAAI;UAAEC,OAAO,EAAER,QAAQ,CAACE;QAAK,CAAC,CAAC,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;MACxB;IACF;EACF,CAAC;EACDT,OAAO,EAAE;IACPc,gBAAgB,EAAGf,KAAK,IAAK;MAAE;MAC7B,IAAIgB,QAAQ,GAAGhB,KAAK,CAACiB,QAAQ,CAACC,MAAM,CAACC,OAAO;MAAI;MAC9CA,OAAO,CAACN,IAAI,CAACO,WAAW,CAAC,CAAC,EAACC,QAAQ,CAACrB,KAAK,CAACsB,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;MACvE,CAAC;MACD,IAAIpB,KAAK,CAACuB,SAAS,KAAK,KAAK,EAAE;QAAE;QAC/BP,QAAQ,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACZ,IAAI,CAACc,aAAa,CAACD,CAAC,CAACb,IAAI,CAAC,CAAC,CAAC,CAAC;MACzD,CAAC,MAAM;QACLG,QAAQ,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACb,IAAI,CAACc,aAAa,CAACF,CAAC,CAACZ,IAAI,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,OAAOG,QAAQ,CAAC,CAAC;IACnB,CAAC;IACDY,OAAO,EAAG5B,KAAK,IAAKA,KAAK,CAAC4B,OAAO;IAAE;IACnCC,cAAc,EAAG7B,KAAK,IAAMa,IAAI,IAAKb,KAAK,CAAC6B,cAAc,CAAChB,IAAI,CAAC,CAAE;EACnE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}