{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\nimport { load } from 'webfontloader';\nexport default createStore({\n  state: {\n    pokemons: [],\n    loading: false,\n    searchQuery: '',\n    sortOrder: 'asc',\n    pokemonDetails: {}\n  },\n  mutations: {\n    SET_POKEMONS(state, pokemons) {\n      state.pokemons = pokemons; //pokemonsをstateのpokemonsに流す\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading; //loadingをstateのloadingに流す\n    },\n    SET_SEARCH_QUERY(state, query) {\n      state.searchQuery = query; //queryをstateのsearchQueryに流す\n    },\n    SET_SORT_ORDER(state, order) {\n      state.sortOrder = order; //orderをstateのsortOrderに流す\n    },\n    SET_POKEMON_DETAILS(state, {\n      name,\n      details\n    }) {\n      state.pokemonDetails = {\n        ...state.pokemonDetails,\n        [name]: details\n      };\n    }\n  },\n  actions: {\n    async fetchPokemons({\n      commit\n    }) {\n      //以下を「fetchPokemons」としてmutationsにコミット\n      commit('SET_LOADING', true); //「SET_LOADING」にtrueの値をコミット\n      try {\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=150'); //ポケモンAPIを呼び出し\n        commit('SET_POKEMONS', response.data.results); //「SET_POKEMONS」にAPIが返した結果をコミット\n      } catch (error) {\n        //エラーの場合\n        console.error(error); //コンソールにエラー内容を表示\n      } finally {\n        //成功でもエラーでも以下を実行\n        commit('SET_LOADING', false); //「SET_LOADING」にfalseの値をコミット\n      }\n    },\n    async fetchPokemonDetails({\n      commit\n    }, name) {\n      //以下を「fetchPokemonDetails」としてmutationsのnameにコミット\n      try {\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`); //ポケモンAPIを呼び出し\n        commit('SET_POKEMON_DETAILS', {\n          name,\n          details: response.data\n        }); //？？？「SET_POKEMON_DETAILS」のnameにAPIが返した結果をコミット？この書き方のはどこが何を指している？\n      } catch (error) {\n        console.error(error); //エラーの場合、コンソールにエラー内容を表示\n      }\n    }\n  },\n  getters: {\n    filteredPokemons: state => {\n      //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon =>\n      //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n      pokemon.name.toLowerCase(), includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') {\n        //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え　？？？aとbはどこから出てきた？\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: state => state.loading,\n    //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: state => name => state.pokemonDetails[name] //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n});","map":{"version":3,"names":["createStore","axios","load","state","pokemons","loading","searchQuery","sortOrder","pokemonDetails","mutations","SET_POKEMONS","SET_LOADING","SET_SEARCH_QUERY","query","SET_SORT_ORDER","order","SET_POKEMON_DETAILS","name","details","actions","fetchPokemons","commit","response","get","data","results","error","console","fetchPokemonDetails","getters","filteredPokemons","filtered","filter","pokemon","toLowerCase","includes","sort","a","b","localeCompare"],"sources":["/Users/yu/pokemon-app_practice/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\nimport { load } from 'webfontloader';\n\nexport default createStore({\n  state: {\n    pokemons: [],\n    loading: false,\n    searchQuery: '',\n    sortOrder: 'asc',\n    pokemonDetails: {},\n  },\n  mutations: {\n    SET_POKEMONS(state, pokemons) {\n      state.pokemons = pokemons; //pokemonsをstateのpokemonsに流す\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading; //loadingをstateのloadingに流す\n    },\n    SET_SEARCH_QUERY(state, query) {\n      state.searchQuery = query; //queryをstateのsearchQueryに流す\n    },\n    SET_SORT_ORDER(state, order) {\n      state.sortOrder = order; //orderをstateのsortOrderに流す\n    },\n    SET_POKEMON_DETAILS(state, { name, details }) {\n      state.pokemonDetails = { ...state.pokemonDetails, [name]: details };\n    },\n  },\n  actions: {\n    async fetchPokemons({ commit }) { //以下を「fetchPokemons」としてmutationsにコミット\n      commit('SET_LOADING', true); //「SET_LOADING」にtrueの値をコミット\n      try {\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=150'); //ポケモンAPIを呼び出し\n        commit('SET_POKEMONS', response.data.results); //「SET_POKEMONS」にAPIが返した結果をコミット\n      } catch (error) { //エラーの場合\n        console.error(error); //コンソールにエラー内容を表示\n      } finally { //成功でもエラーでも以下を実行\n        commit('SET_LOADING', false); //「SET_LOADING」にfalseの値をコミット\n      }\n    },\n    async fetchPokemonDetails({ commit }, name) { //以下を「fetchPokemonDetails」としてmutationsのnameにコミット\n      try {\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`); //ポケモンAPIを呼び出し\n        commit('SET_POKEMON_DETAILS', { name, details: response.data }); //？？？「SET_POKEMON_DETAILS」のnameにAPIが返した結果をコミット？この書き方のはどこが何を指している？\n      } catch (error) {\n        console.error(error); //エラーの場合、コンソールにエラー内容を表示\n      }\n    },\n  },\n  getters: {\n    filteredPokemons: (state) => { //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon => //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n        pokemon.name.toLowerCase(),includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') { //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え　？？？aとbはどこから出てきた？\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: (state) => state.loading, //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: (state) => (name) => state.pokemonDetails[name], //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}