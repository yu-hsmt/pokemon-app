{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  getters: {\n    filteredPokemons: state => {\n      //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon =>\n      //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n      pokemon.name.toLowerCase(), includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') {\n        //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え　？？？aとbはどこから出てきた？\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: state => state.loading,\n    //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: state => name => state.pokemonDetails[name] //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n});","map":{"version":3,"names":["createStore","axios","state","getters","mutations","actions","filteredPokemons","filtered","pokemons","filter","pokemon","name","toLowerCase","includes","searchQuery","sortOrder","sort","a","b","localeCompare","loading","pokemonDetails"],"sources":["/Users/yu/pokemon-app_practice/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  getters: {\n    filteredPokemons: (state) => { //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon => //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n        pokemon.name.toLowerCase(),includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') { //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え　？？？aとbはどこから出てきた？\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: (state) => state.loading, //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: (state) => (name) => state.pokemonDetails[name], //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE,CACP,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE,CACX,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDF,OAAO,EAAE;IACPG,gBAAgB,EAAGJ,KAAK,IAAK;MAAE;MAC7B,IAAIK,QAAQ,GAAGL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAACC,OAAO;MAAI;MAC9CA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,EAACC,QAAQ,CAACX,KAAK,CAACY,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;MACvE,CAAC;MACD,IAAIV,KAAK,CAACa,SAAS,KAAK,KAAK,EAAE;QAAE;QAC/BR,QAAQ,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACN,IAAI,CAACQ,aAAa,CAACD,CAAC,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;MACzD,CAAC,MAAM;QACLJ,QAAQ,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,IAAI,CAACQ,aAAa,CAACF,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,OAAOJ,QAAQ,CAAC,CAAC;IACnB,CAAC;IACDa,OAAO,EAAGlB,KAAK,IAAKA,KAAK,CAACkB,OAAO;IAAE;IACnCC,cAAc,EAAGnB,KAAK,IAAMS,IAAI,IAAKT,KAAK,CAACmB,cAAc,CAACV,IAAI,CAAC,CAAE;EACnE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}